import * as cn from "src/application/services/connection.service";
import { ContextsE } from "src/application/enums/contexts.enum";
import { ServicioPacienteI } from "../interfaces/servicio-paciente.interface";
import { GetHistorialAgrupadoresDto } from "../dtos/get-historial-agrupadores.dto";

export const getServiciosPacientes = async (
  dto: GetHistorialAgrupadoresDto,
  context: string
): Promise<ServicioPacienteI[]> => {
  let query: string;
  let parameters: any[] = [];
  if (context === ContextsE.VALLEDUPAR) {
    query = `SELECT 
    IsNull(GENSERIPS.SIPCODCUP, 'MEDICAMENTOS') AS ServicioCodigo,
    IsNull(GENSERIPS.SIPNOMBRE, 'MEDICAMENTOS') AS ServicioNombre,
    GENARESER.GASCODIGO AS AreaCodigo,
    GENARESER.GASNOMBRE AS AreaNombre, 
 SUM(SLNSERPRO.SERCANTID * (SLNSERPRO.SERVALENT + SLNSERPRO.SERVALPAC)) AS TotalEjecutado
FROM SLNFACTUR SLNFACTUR
 INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
 INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = SLNFACTUR.GENDETCON
 LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
 INNER JOIN SLNSERPRO SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
 INNER JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
 LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
 LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
 LEFT JOIN GENARESER GENARESER ON GENARESER.OID = SLNSERPRO.GENARESER1
WHERE 
SLNFACTUR.SFATIPDOC = 17
AND SLNFACTUR.SFADOCANU = N'0' 
AND CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) BETWEEN @0 AND @1
AND GENDETCON.GDECODIGO = @3
AND SLNORDSER.SOSESTADO = 1
AND ADNINGRESO.AINCONSEC = @2
GROUP BY 
GENARESER.GASCODIGO,
GENARESER.GASNOMBRE,
GENSERIPS.SIPCODIGO,
GENSERIPS.SIPNOMBRE
ORDER BY 
TotalEjecutado DESC;`;
    parameters = [dto.inicioReporte, dto.finalReporte, dto.ingreso, dto.contrato];
  } else if (context === ContextsE.ALTACENTRO) {
    query = `SELECT 
    IsNull(GENSERIPS.SIPCODIGO, 'MEDICAMENTOS') AS ServicioCodigo,
    IsNull(GENSERIPS.SIPNOMBRE, 'MEDICAMENTOS') AS ServicioNombre,
    GENARESER.GASCODIGO AS AreaCodigo,
    GENARESER.GASNOMBRE AS AreaNombre, 
 SUM(SLNSERPRO.SERCANTID * (SLNSERPRO.SERVALENT + SLNSERPRO.SERVALPAC)) AS TotalEjecutado
FROM SLNFACTUR SLNFACTUR
 INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
 INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = SLNFACTUR.GENDETCON
 LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
 INNER JOIN SLNSERPRO SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
 INNER JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
 LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
 LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
 LEFT JOIN GENARESER GENARESER ON GENARESER.OID = SLNSERPRO.GENARESER1
WHERE 
SLNFACTUR.SFATIPDOC = 17
AND SLNFACTUR.SFADOCANU = N'0' 
AND CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) BETWEEN @2 AND @3
AND GENDETCON.GDECODIGO BETWEEN '8001' AND '8010'
AND SLNORDSER.SOSESTADO = 1
AND ADNINGRESO.AINCONSEC = @0	
GROUP BY 
GENARESER.GASCODIGO,
GENARESER.GASNOMBRE,
GENSERIPS.SIPCODIGO,
GENSERIPS.SIPNOMBRE
ORDER BY 
TotalEjecutado DESC;`;
    parameters = [dto.ingreso, dto.contrato, dto.inicioReporte, dto.finalReporte];
  } else if (context === ContextsE.AGUACHICA) {
    query = `SELECT 
    IsNull(GENSERIPS.SIPCODIGO, 'MEDICAMENTOS') AS ServicioCodigo,
    IsNull(GENSERIPS.SIPNOMBRE, 'MEDICAMENTOS') AS ServicioNombre,
    GENARESER.GASCODIGO AS AreaCodigo,
    GENARESER.GASNOMBRE AS AreaNombre, 
 SUM(SLNSERPRO.SERCANTID * (SLNSERPRO.SERVALENT + SLNSERPRO.SERVALPAC)) AS TotalEjecutado
FROM SLNFACTUR SLNFACTUR
 INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
 INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = SLNFACTUR.GENDETCON
 LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
 INNER JOIN SLNSERPRO SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
 INNER JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
 LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
 LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
 LEFT JOIN GENARESER GENARESER ON GENARESER.OID = SLNSERPRO.GENARESER1
WHERE 
SLNFACTUR.SFATIPDOC = 17
AND SLNFACTUR.SFADOCANU = N'0' 
AND CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) BETWEEN @1 AND @2
AND GENDETCON.GDECODIGO BETWEEN '8000' AND '8005'
AND SLNORDSER.SOSESTADO = 1
AND ADNINGRESO.AINCONSEC = @0	
GROUP BY 
GENARESER.GASCODIGO,
GENARESER.GASNOMBRE,
GENSERIPS.SIPCODIGO,
GENSERIPS.SIPNOMBRE
ORDER BY 
TotalEjecutado DESC;`;
    parameters = [dto.ingreso, dto.inicioReporte, dto.finalReporte];
  } else {
    cn.ThrBadReqExc("El context no es valido");
  }
  try {
    const result = await cn.getDataSource(context).query(query, parameters);
    return result;
  } catch (error) {
    cn.ThrBadReqExc();
  }
};
