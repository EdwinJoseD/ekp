import { ContextsE, ContextsE as ctxts } from "src/application/enums/contexts.enum";
import * as cn from "src/application/services/connection.service";
import { GetConsumidoConsolidadoDto } from "../dtos/get-consumido-consolidado.dto";
import { ConsumidoI } from "../interfaces/consumido.interface";

export const getConsumidoConsolidado = async (
  dto: GetConsumidoConsolidadoDto,
  context: string
): Promise<ConsumidoI[]> => {
  let query: string;
  if (context === ctxts.VALLEDUPAR) {
    query = `SELECT 
    CONS.NContrato,
    CONS.Contrato,
    SUM(CONS.TotalEjecutado) TotalEjecutado,
    MAX(CONS.TotalFacturado) TotalFacturado,
    SUM(CONS.Iteraciones) Iteraciones,
    ISNULL(ROUND ( MAX(CONS.TotalFacturado)-SUM(CONS.TotalEjecutado), 2 ),0) ErrorAbsoluto,
    ROUND( ((MAX(CONS.TotalFacturado)-SUM(CONS.TotalEjecutado))/NULLIF(MAX(CONS.TotalFacturado), 0))*100,2) ErrorRelativo,
    ROUND(((SUM(CONS.TotalEjecutado) / NULLIF(MAX(CONS.TotalFacturado),0))*100), 2) Porcentaje
    FROM GENDETCON
    RIGHT JOIN(
    SELECT   
      'ACOST' ESTADO,
      GENDETCON.GDECODIGO As NContrato,
      GENDETCON.GDENOMBRE As Contrato,
      COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
      SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    FROM HPNESTANC
      INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
        INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
        INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
        INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
        LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
        LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
        LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
      WHERE GENDETCON.GDECODIGO = 'I202'
        AND ADNINGRESO.AINESTADO = 0 
        AND SLNORDSER.SOSESTADO <> 2
        AND HPNDEFCAM.HCAESTADO = 2
        AND HPNESTANC.HESFECSAL IS NULL
      GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
      UNION
    Select
      'FACT' ESTADO,
      GENDETCON.GDECODIGO As NContrato,
      GENDETCON.GDENOMBRE As Contrato,
      COUNT(SLNFACTUR.SFATOTFAC) Iteraciones,
      SUM(SLNFACTUR.SFAVALCAR) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    From SLNFACTUR SLNFACTUR
      Inner Join ADNINGRESO ADNINGRESO On ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
      Inner Join GENDETCON GENDETCON On GENDETCON.OID = SLNFACTUR.GENDETCON
      LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
      LEFT JOIN HPNSUBGRU F ON F.OID = E.HPNSUBGRU
      LEFT JOIN GCMLIMPGP G ON G.GDECODIGO = GENDETCON.GDECODIGO
    Where CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) Between @0 AND @1
      AND  SLNFACTUR.SFADOCANU = N'0'
      and SLNFACTUR.SFATIPDOC = 17
      AND GENDETCON.GDECODIGO = 'I202'
    GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE)AS CONS ON CONS.NContrato = GENDETCON.GDECODIGO
    GROUP BY CONS.NContrato, CONS.Contrato
    ORDER BY CONS.NContrato`;
  } else if (context === ContextsE.ALTACENTRO) {
    query = `SELECT 
    CONS.NContrato,
    CONS.Contrato,
    SUM(CONS.TotalEjecutado) TotalEjecutado,
    MAX(CONS.TotalFacturado) TotalFacturado,
    SUM(CONS.Iteraciones) Iteraciones,
    ISNULL(ROUND ( MAX(CONS.TotalFacturado)-SUM(CONS.TotalEjecutado), 2 ),0) ErrorAbsoluto,
    ROUND( ((MAX(CONS.TotalFacturado)-SUM(CONS.TotalEjecutado))/NULLIF(MAX(CONS.TotalFacturado), 0))*100,2) ErrorRelativo,
    ROUND(((SUM(CONS.TotalEjecutado) / NULLIF(MAX(CONS.TotalFacturado),0))*100), 2) Porcentaje
    FROM GENDETCON
    RIGHT JOIN(
    SELECT   
      'ACOST' ESTADO,
      GENDETCON.GDECODIGO As NContrato,
      GENDETCON.GDENOMBRE As Contrato,
      COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
      SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    FROM HPNESTANC
      INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
        INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
        INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
        INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
        LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
        LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
        LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
      WHERE GENDETCON.GDECODIGO BETWEEN '8001' AND '8010'
        AND ADNINGRESO.AINESTADO = 0 
        AND SLNORDSER.SOSESTADO <> 2
        AND HPNDEFCAM.HCAESTADO = 2
        AND HPNESTANC.HESFECSAL IS NULL
      GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
      UNION
    Select
      'FACT' ESTADO,
      GENDETCON.GDECODIGO As NContrato,
      GENDETCON.GDENOMBRE As Contrato,
      COUNT(SLNFACTUR.SFATOTFAC) Iteraciones,
      SUM(SLNFACTUR.SFAVALCAR) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    From SLNFACTUR SLNFACTUR
      Inner Join ADNINGRESO ADNINGRESO On ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
      Inner Join GENDETCON GENDETCON On GENDETCON.OID = SLNFACTUR.GENDETCON
      LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
      LEFT JOIN HPNSUBGRU F ON F.OID = E.HPNSUBGRU
      LEFT JOIN GCMLIMPGP G ON G.GDECODIGO = GENDETCON.GDECODIGO
    Where CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) Between @0 And @1
      AND  SLNFACTUR.SFADOCANU = N'0'
      and SLNFACTUR.SFATIPDOC = 17
      AND GENDETCON.GDECODIGO BETWEEN '8001' AND '8010'
    GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE)AS CONS ON CONS.NContrato = GENDETCON.GDECODIGO
    GROUP BY CONS.NContrato, CONS.Contrato
    ORDER BY CONS.NContrato`;
  } else if (context === ContextsE.AGUACHICA) {
    query = `SELECT 
    CONS.NContrato,
    CONS.Contrato,
    SUM(CONS.TotalEjecutado) TotalEjecutado,
    MAX(CONS.TotalFacturado) TotalFacturado,
    SUM(CONS.Iteraciones) Iteraciones,
    ISNULL(ROUND ( MAX(CONS.TotalFacturado)-SUM(CONS.TotalEjecutado), 2 ),0) ErrorAbsoluto,
    ROUND( ((MAX(CONS.TotalFacturado)-SUM(CONS.TotalEjecutado))/NULLIF(MAX(CONS.TotalFacturado), 0))*100,2) ErrorRelativo,
    ROUND(((SUM(CONS.TotalEjecutado) / NULLIF(MAX(CONS.TotalFacturado),0))*100), 2) Porcentaje
    FROM GENDETCON
    RIGHT JOIN(
    (SELECT   
      'ACOST' ESTADO,
      GENDETCON.GDECODIGO As NContrato,
      GENDETCON.GDENOMBRE As Contrato,
      COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
      SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    FROM HPNESTANC
      INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
        INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
        INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
        INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
        LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
        LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
        LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
      WHERE GENDETCON.GDECODIGO IN('8000', '8001', '8002', '8005')
        AND ADNINGRESO.AINESTADO = 0 
        AND SLNORDSER.SOSESTADO <> 2
        AND HPNDEFCAM.HCAESTADO = 2
        AND HPNESTANC.HESFECSAL IS NULL
      GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
  UNION
  SELECT   
      'ACOST' ESTADO,
      '8003 - 8004' As NContrato,
      'PGP ASMET SALUD EPS - SUBS - CONTR' As Contrato,
      COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
      SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    FROM HPNESTANC
      INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
        INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
        INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
        INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
        LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
        LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
        LEFT JOIN GCMLIMPGP G ON  G.GDECODIGO = '8004'
      WHERE GENDETCON.GDECODIGO IN ('8003', '8004')
        AND ADNINGRESO.AINESTADO = 0 
        AND SLNORDSER.SOSESTADO <> 2
        AND HPNDEFCAM.HCAESTADO = 2
        AND HPNESTANC.HESFECSAL IS NULL
      GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
  )
      UNION
    (Select
      'FACT' ESTADO,
      GENDETCON.GDECODIGO As NContrato,
      GENDETCON.GDENOMBRE As Contrato,
      COUNT(SLNFACTUR.SFATOTFAC) Iteraciones,
      SUM(SLNFACTUR.SFAVALCAR) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    From SLNFACTUR SLNFACTUR
      Inner Join ADNINGRESO ADNINGRESO On ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
      Inner Join GENDETCON GENDETCON On GENDETCON.OID = SLNFACTUR.GENDETCON
      LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
      LEFT JOIN HPNSUBGRU F ON F.OID = E.HPNSUBGRU
      LEFT JOIN GCMLIMPGP G ON G.GDECODIGO = GENDETCON.GDECODIGO
    Where CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) Between @0 And @1
      AND  SLNFACTUR.SFADOCANU = N'0'
      and SLNFACTUR.SFATIPDOC = 17
      AND GENDETCON.GDECODIGO IN ('8000', '8001', '8002', '8005')
    GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
  UNION
  Select
      'FACT' ESTADO,
      '8003 - 8004' As NContrato,
      'PGP ASMET SALUD EPS - SUBS - CONTR' As Contrato,
      COUNT(SLNFACTUR.SFATOTFAC) Iteraciones,
      SUM(SLNFACTUR.SFAVALCAR) TotalEjecutado,
      ISNULL(G.LIMITE, 0) TotalFacturado
    From SLNFACTUR SLNFACTUR
      Inner Join ADNINGRESO ADNINGRESO On ADNINGRESO.OID = SLNFACTUR.ADNINGRESO
      Inner Join GENDETCON GENDETCON On GENDETCON.OID = SLNFACTUR.GENDETCON
      LEFT JOIN HPNDEFCAM E ON ADNINGRESO.HPNDEFCAM = E.OID
      LEFT JOIN HPNSUBGRU F ON F.OID = E.HPNSUBGRU
      LEFT JOIN GCMLIMPGP G ON G.GDECODIGO = '8004'
    Where CONVERT(DATE, SLNFACTUR.SFAFECFAC, 103) Between @0 And @1
      AND  SLNFACTUR.SFADOCANU = N'0'
      and SLNFACTUR.SFATIPDOC = 17
      AND GENDETCON.GDECODIGO IN('8003', '8004')
    GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
  )
  )AS CONS ON CONS.NContrato = GENDETCON.GDECODIGO
    GROUP BY CONS.NContrato, CONS.Contrato
    ORDER BY CONS.NContrato`;
  } else {
    cn.ThrBadReqExc("El context no es valido");
  }
  try {
    const result = await cn.getDataSource(context).query(query, [dto.inicioReporte, dto.finalReporte]);
    return result;
  } catch (error) {
    cn.ThrBadReqExc();
  }
};
