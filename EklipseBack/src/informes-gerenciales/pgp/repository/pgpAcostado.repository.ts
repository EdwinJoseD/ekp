import { Inject, UnauthorizedException } from '@nestjs/common';
import { REQUEST } from '@nestjs/core';
import { AuthService } from 'src/auth/auth.service';
import { Connection, getManager } from 'typeorm';
import { Request } from 'express';

export class PgpAcostado {
  private pgpRepository: Connection;
  private conexion: string;

  constructor(
    @Inject(REQUEST) request: Request,
    private readonly authService: AuthService
  ) {
    try {
      const token = request.headers.authorization.split(' ')[1];
      this.conexion = authService.getConnectionWithToken(token);
      this.pgpRepository = getManager(this.conexion).connection;
    } catch (error) {
      throw new UnauthorizedException('NO ESTAS AUTHENTICADO');
    }
  }

  /**
   *
   * @returns Consumido por cada pgp segun el censo
   */
  async ConsumidoActual(centro1: number, centro2: number) {
    if (this.conexion === 'VDP') {
      return await this.pgpRepository.manager.query(
        `SELECT   
        GENDETCON.GDECODIGO As NContrato,
        GENDETCON.GDENOMBRE As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          --INNER JOIN HPNSUBGRU ON HPNSUBGRU.OID = HPNDEFCAM.HPNSUBGRU
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
        WHERE GENDETCON.GDECODIGO = 'I202'
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
        GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        ORDER BY GENDETCON.GDECODIGO;`
      );
    }
    if (this.conexion === 'AC') {
      return await this.pgpRepository.manager.query(
        `SELECT   
        GENDETCON.GDECODIGO As NContrato,
        GENDETCON.GDENOMBRE As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          --INNER JOIN HPNSUBGRU ON HPNSUBGRU.OID = HPNDEFCAM.HPNSUBGRU
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
        WHERE GENDETCON.GDECODIGO BETWEEN '8001' AND '8010'
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
          AND ADNINGRESO.ADNCENATE IN (@0, @1)
        GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        ORDER BY GENDETCON.GDECODIGO;`,
        [centro1, centro2]
      );
    }
    if (this.conexion === 'AGU') {
      return this.pgpRepository.manager.query(
        `SELECT   
        GENDETCON.GDECODIGO As NContrato,
        GENDETCON.GDENOMBRE As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
        WHERE GENDETCON.GDECODIGO IN ('8000', '8001', '8002', '8005')
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
        GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        UNION
        SELECT   
        '8003 - 8004' As NContrato,
        'PGP ASMET SALUD SUBS - CONTR' As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON G.GDECODIGO = '8004'
        WHERE GENDETCON.GDECODIGO IN ('8003', '8004')
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
          GROUP BY G.LIMITE
        ORDER BY GENDETCON.GDECODIGO;`
      );
    }
  }

  /**
   *
   * @returns Consumido por cada pgp segun el censo
   */
  async ConsumidoAntiguo(centro1: number, centro2: number) {
    if (this.conexion === 'VDP') {
      return await this.pgpRepository.manager.query(
        `SELECT   
        GENDETCON.GDECODIGO As NContrato,
        GENDETCON.GDENOMBRE As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
        WHERE GENDETCON.GDECODIGO = 'I202'
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
      AND MONTH(ADNINGRESO.AINFECING) = MONTH(GETDATE())-1
      AND ADNINGRESO.AINFECFAC IS NULL
        GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        ORDER BY GENDETCON.GDECODIGO;`
      );
    }
    if (this.conexion === 'AC') {
      return await this.pgpRepository.manager.query(
        `SELECT   
        GENDETCON.GDECODIGO As NContrato,
        GENDETCON.GDENOMBRE As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
        WHERE GENDETCON.GDECODIGO BETWEEN '8001' AND '8010'
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
          AND ADNINGRESO.ADNCENATE IN(@0, @1)
      AND MONTH(ADNINGRESO.AINFECING) = MONTH(GETDATE())-1
      AND ADNINGRESO.AINFECFAC IS NULL
        GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        ORDER BY GENDETCON.GDECODIGO;`,
        [centro1, centro2]
      );
    }
    if (this.conexion === 'AGU') {
      return this.pgpRepository.manager.query(
        `SELECT   
        GENDETCON.GDECODIGO As NContrato,
        GENDETCON.GDENOMBRE As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
        WHERE GENDETCON.GDECODIGO IN ('8000', '8001', '8002', '8005')
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
          /*las dos condiciones son para los acosados del mes anterior*/
          AND MONTH(ADNINGRESO.AINFECING) = MONTH(GETDATE())-1
          AND ADNINGRESO.AINFECFAC IS NULL
        GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        UNION
        SELECT   
        '8003 - 8004' As NContrato,
        'PGP ASMET SALUD SUBS - CONTR' As Contrato,
        COUNT(DISTINCT(ADNINGRESO.AINCONSEC)) Iteraciones,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado,
        ISNULL(G.LIMITE, 0) TotalFacturado,
        ISNULL((G.LIMITE -SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)), 0) ErrorAbsoluto,
        ISNULL(((G.LIMITE - SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO)) / G.LIMITE)*100, 0) ErrorRelativo,
        ISNULL(ROUND(((SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) / G.LIMITE)*100), 2),0) Porcentaje
      FROM HPNESTANC
        INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
          LEFT JOIN GCMLIMPGP G ON G.GDECODIGO = '8004'
        WHERE GENDETCON.GDECODIGO IN ('8003', '8004')
          AND ADNINGRESO.AINESTADO = 0 
          AND SLNORDSER.SOSESTADO <> 2
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
          /**las dos condiciones son para los acosados del mes anterior*/
          AND MONTH(ADNINGRESO.AINFECING) = MONTH(GETDATE())-1
          AND ADNINGRESO.AINFECFAC IS NULL
          GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, G.LIMITE
        ORDER BY GENDETCON.GDECODIGO;`
      );
    }
  }

  /**
   *
   * @param contrato1 Contrato Inicial
   * @param contrato2 Contrato Final
   * @returns Agrupadores
   */
  // async Agrupadores(contrato1: string, contrato2: string) {
  //   return await this.pgpRepository.manager.query(
  //     `SELECT
  //     ISNULL(G.ORDEN, 2) ORDEN,
  //      ISNULL(G.AGRUPADOR, 'URGENCIAS')AS AGRUPADOR,
  //      SUM(SLNSERPRO.SERVALPRO * SLNSERPRO.SERCANTID)SUMA
  //           FROM HPNESTANC
  //           INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
  //           INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = HPNESTANC.ADNINGRES
  //           INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = ADNINGRESO.GENDETCON
  //           LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
  //           LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
  //           LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
  //           LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
  //           LEFT JOIN GCMAGRUPGP G ON RTrim(LTrim(GENSERIPS.SIPCODIGO)) = G.COD_SERIPS
  //           WHERE
  //              ADNINGRESO.AINESTADO = 0
  //             AND SLNORDSER.SOSESTADO <> 2
  //             AND HPNDEFCAM.HCAESTADO = 2
  //             AND HPNESTANC.HESFECSAL IS NULL
  //             AND GENDETCON.GDECODIGO BETWEEN @0 AND @1
  //           GROUP BY
  //           G.AGRUPADOR, G.ORDEN
  //           ORDER BY
  //           G.ORDEN DESC`,
  //     [contrato1, contrato2]
  //   );
  // }

  /**
   *
   * @param contrato Contrato para elegir pacientes
   * @returns Pacientes pertenecientes a ese agrupador
   */
  async PacientesActual(
    contrato: string,
    centro1: number,
    centro2: number
  ): Promise<any[]> {
    return await this.pgpRepository.manager.query(
      `SELECT 
        ADNINGRESO.AINCONSEC AS Ingreso,
        GENPACIEN.PACNUMDOC Identificacion,
        GENPACIEN.GPANOMCOM Paciente,
        ADNINGRESO.AINFECING,
         DateDiff(DAY, ADNINGRESO.AINFECING, GetDate()) As DiasEstancia,
        CASE ADNINGRESO.AINURGCON
          WHEN -1 THEN 'NINGUNO'
          WHEN 0 THEN 'URGENCIAS'
          WHEN 1 THEN 'CONSULTA EXTERNA'
          WHEN 2 THEN 'NACIDO EN LA IPS'
          WHEN 3 THEN 'REMITIDO'
          WHEN 4 THEN 'HOSPITALIZACION DE URGENCIAS'
          WHEN 5 THEN 'HOSPITALIZACION'
          WHEN 6 THEN 'IMAGENES'
          WHEN 7 THEN 'LABORATORIO'
          WHEN 8 THEN 'URGENCIA GINECOLOGIA'
          WHEN 9 THEN 'QUIROFANO'
          WHEN 10 THEN 'CIRUGIA AMBULATORIA'
          WHEN 11 THEN 'CIRUGIA PROGRAMADA'
          WHEN 12 THEN 'UCI NEONATAL'
          WHEN 13 THEN 'UCI ADULTO'
          END AS TipoIngreso,
         HPNDEFCAM.HCACODIGO CodCama,
        HPNDEFCAM.HCANOMBRE Cama,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) AS TotalEjecutado
        FROM HPNESTANC
          INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          --INNER JOIN HPNSUBGRU ON HPNSUBGRU.OID = HPNDEFCAM.HPNSUBGRU
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
        WHERE GENDETCON.GDECODIGO = @0
          AND SLNORDSER.SOSESTADO <> 2
          AND ADNINGRESO.AINESTADO = 0
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
          AND ADNINGRESO.ADNCENATE IN(@1, @2)
        GROUP BY 
          ADNINGRESO.AINCONSEC, 
          ADNINGRESO.AINURGCON,
          GENPACIEN.PACNUMDOC,
          GENPACIEN.GPANOMCOM,
          HPNDEFCAM.HCACODIGO,
          HPNDEFCAM.HCANOMBRE,
          ADNINGRESO.AINFECING
          ORDER BY TotalEjecutado DESC;`,
      [contrato, centro1, centro2]
    );
  }

  /**
   *
   * @param contrato Contrato para elegir pacientes
   * @returns Pacientes pertenecientes a ese agrupador
   */
  async PacientesAntiguos(
    contrato: string,
    centro1: number,
    centro2: number
  ): Promise<any[]> {
    return await this.pgpRepository.manager.query(
      `SELECT 
        ADNINGRESO.AINCONSEC AS Ingreso,
        GENPACIEN.PACNUMDOC Identificacion,
        GENPACIEN.GPANOMCOM Paciente,
        ADNINGRESO.AINFECING,
         DateDiff(DAY, ADNINGRESO.AINFECING, GetDate()) As DiasEstancia,
        CASE ADNINGRESO.AINURGCON
          WHEN -1 THEN 'NINGUNO'
          WHEN 0 THEN 'URGENCIAS'
          WHEN 1 THEN 'CONSULTA EXTERNA'
          WHEN 2 THEN 'NACIDO EN LA IPS'
          WHEN 3 THEN 'REMITIDO'
          WHEN 4 THEN 'HOSPITALIZACION DE URGENCIAS'
          WHEN 5 THEN 'HOSPITALIZACION'
          WHEN 6 THEN 'IMAGENES'
          WHEN 7 THEN 'LABORATORIO'
          WHEN 8 THEN 'URGENCIA GINECOLOGIA'
          WHEN 9 THEN 'QUIROFANO'
          WHEN 10 THEN 'CIRUGIA AMBULATORIA'
          WHEN 11 THEN 'CIRUGIA PROGRAMADA'
          WHEN 12 THEN 'UCI NEONATAL'
          WHEN 13 THEN 'UCI ADULTO'
          END AS TipoIngreso,
         HPNDEFCAM.HCACODIGO CodCama,
        HPNDEFCAM.HCANOMBRE Cama,
        SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) AS TotalEjecutado
        FROM HPNESTANC
          INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
          INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
          INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
          INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
          LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
          LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
        WHERE GENDETCON.GDECODIGO = @0
          AND SLNORDSER.SOSESTADO <> 2
          AND ADNINGRESO.AINESTADO = 0
          AND HPNDEFCAM.HCAESTADO = 2
          AND HPNESTANC.HESFECSAL IS NULL
      AND MONTH(ADNINGRESO.AINFECING) = MONTH(GETDATE())-1
      AND ADNINGRESO.AINFECFAC IS NULL
      AND ADNINGRESO.ADNCENATE IN(@1, @2)
        GROUP BY 
          ADNINGRESO.AINCONSEC, 
          ADNINGRESO.AINURGCON,
          GENPACIEN.PACNUMDOC,
          GENPACIEN.GPANOMCOM,
          HPNDEFCAM.HCACODIGO,
          HPNDEFCAM.HCANOMBRE,
          ADNINGRESO.AINFECING
          ORDER BY TotalEjecutado DESC;`,
      [contrato, centro1, centro2]
    );
  }

  /**
   *
   * @param contrato Contrato al que pertenece el paciente
   * @param ingreso Ingreso del paciente
   * @returns Agrupadores por los cuales paso el paciente
   */
  async Agrupadores(contrato: string, ingreso: string) {
    if (this.conexion === 'VDP') {
      return await this.pgpRepository.manager.query(
        `SELECT  
      ISNULL(G.ORDEN, 0) ORDEN,
         ISNULL(G.AGRUPADOR, 'EVENTOS')AS AGRUPADOR,
         ADNINGRESO.AINCONSEC,
         SUM(SLNSERPRO.SERVALPRO * SLNSERPRO.SERCANTID)SUMA
              FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
              INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = HPNESTANC.ADNINGRES
              INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = ADNINGRESO.GENDETCON
              LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
              LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
              LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
              LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
              LEFT JOIN GCMAGRUPGP G ON RTrim(LTrim(GENSERIPS.SIPCODCUP)) = G.COD_CUPS
              AND G.CONTRATO = @0
              WHERE 
                 ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND GENDETCON.GDECODIGO = @0
                AND ADNINGRESO.AINCONSEC = @1
              GROUP BY ADNINGRESO.AINCONSEC, G.AGRUPADOR, G.ORDEN
              ORDER BY ADNINGRESO.AINCONSEC, G.ORDEN DESC
              `,
        [contrato, ingreso]
      );
    } else {
      if (
        contrato == '8005' ||
        contrato == '8006' ||
        contrato == '8009' ||
        contrato == '8010'
      ) {
        return await this.pgpRepository.manager.query(
          `SELECT  
        ISNULL(G.ORDEN, 0) ORDEN,
           ISNULL(G.AGRUPADOR, 'EVENTOS')AS AGRUPADOR,
           ADNINGRESO.AINCONSEC,
           SUM(SLNSERPRO.SERVALPRO * SLNSERPRO.SERCANTID)SUMA
                FROM HPNESTANC
                INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = HPNESTANC.ADNINGRES
                INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = ADNINGRESO.GENDETCON
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
                LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
                LEFT JOIN GCMAGRUPGP G ON RTrim(LTrim(GENSERIPS.SIPCODIGO)) = G.COD_SERIPS
                AND G.CONTRATO = '8010'
                WHERE 
                   ADNINGRESO.AINESTADO = 0 
                  AND SLNORDSER.SOSESTADO <> 2
                  AND HPNDEFCAM.HCAESTADO = 2
                  AND HPNESTANC.HESFECSAL IS NULL
                  AND GENDETCON.GDECODIGO = @0
                  AND ADNINGRESO.AINCONSEC = @1
                GROUP BY ADNINGRESO.AINCONSEC, G.AGRUPADOR, G.ORDEN
                ORDER BY ADNINGRESO.AINCONSEC, G.ORDEN DESC
                `,
          [contrato, ingreso]
        );
      } else {
        return await this.pgpRepository.manager.query(
          `SELECT  
        ISNULL(G.ORDEN, 0) ORDEN,
           ISNULL(G.AGRUPADOR, 'EVENTOS')AS AGRUPADOR,
           ADNINGRESO.AINCONSEC,
           SUM(SLNSERPRO.SERVALPRO * SLNSERPRO.SERCANTID)SUMA
                FROM HPNESTANC
                INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = HPNESTANC.ADNINGRES
                INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = ADNINGRESO.GENDETCON
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
                LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
                LEFT JOIN GCMAGRUPGP G ON RTrim(LTrim(GENSERIPS.SIPCODIGO)) = G.COD_SERIPS
                AND G.CONTRATO = @0
                WHERE 
                   ADNINGRESO.AINESTADO = 0 
                  AND SLNORDSER.SOSESTADO <> 2
                  AND HPNDEFCAM.HCAESTADO = 2
                  AND HPNESTANC.HESFECSAL IS NULL
                  AND GENDETCON.GDECODIGO = @0
                  AND ADNINGRESO.AINCONSEC = @1
                GROUP BY ADNINGRESO.AINCONSEC, G.AGRUPADOR, G.ORDEN
                ORDER BY ADNINGRESO.AINCONSEC, G.ORDEN DESC
                `,
          [contrato, ingreso]
        );
      }
    }
  }

  /**
   *
   * @param contrato Contrato al que Pertenece el paciente
   * @param ingreso Ingreso del paciente
   * @returns Servicios prestados a un paciente
   */
  async Servicios(contrato: string, ingreso: string) {
    return await this.pgpRepository.manager.query(
      `SELECT 
      IsNull(GENSERIPS.SIPCODCUP, 'MEDICAMENTOS') AS ServicioCodigo,
      IsNull(GENSERIPS.SIPNOMBRE, 'MEDICAMENTOS') AS ServicioNombre,
    SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) AS TotalEjecutado
   FROM HPNESTANC H
    INNER JOIN HPNDEFCAM E ON H.HPNDEFCAM = E.OID
    INNER JOIN ADNINGRESO ADNINGRESO ON ADNINGRESO.OID = E.ADNINGRESO
    INNER JOIN GENDETCON GENDETCON ON GENDETCON.OID = ADNINGRESO.GENDETCON
   LEFT JOIN SLNORDSER SLNORDSER ON SLNORDSER.ADNINGRES1 = ADNINGRESO.OID
    LEFT JOIN SLNSERPRO ON SLNSERPRO.SLNORDSER1 = SLNORDSER.OID
   LEFT JOIN SLNSERHOJ SLNSERHOJ ON SLNSERHOJ.OID = SLNSERPRO.OID
   LEFT JOIN GENSERIPS GENSERIPS ON GENSERIPS.OID = SLNSERHOJ.GENSERIPS1
    LEFT JOIN GENARESER GENARESER ON GENARESER.OID = SLNSERPRO.GENARESER1
  WHERE 
   ADNINGRESO.AINESTADO = 0 
   AND SLNORDSER.SOSESTADO <> 2
   AND E.HCAESTADO = 2
   AND H.HESFECSAL IS NULL
   AND GENDETCON.GDECODIGO = @0
   AND ADNINGRESO.AINCONSEC = @1
 GROUP BY 
   GENSERIPS.SIPCODCUP,
   GENSERIPS.SIPNOMBRE
   ORDER BY TotalEjecutado DESC; `,
      [contrato, ingreso]
    );
  }

  /**
   * Funcion para obtener la estancia de un paciente acostado
   * @param ingreso Ingreso del paciente
   * @returns Esrancia de un paciente
   */
  async EstanciaPaciente(ingreso: string) {
    return await this.pgpRepository.manager.query(
      `SELECT
      A.AINCONSEC Ingreso, 
      H.HESFECING FechaIngreso,
      H.HESFECSAL FechaSalida, 
      HCANOMBRE Grupo,
      HD.HCACODIGO Cama 
      FROM HPNESTANC H
      INNER JOIN ADNINGRESO A ON A.OID = H.ADNINGRES
      INNER JOIN HPNDEFCAM HD ON HD.OID = H.HPNDEFCAM
      WHERE A.AINCONSEC = @0;`,
      [ingreso]
    );
  }

  /**
   *
   * @returns Total Cargado por el contrato de nueva eps
   */
  async TotalEjecutadoAcostadoDiarionueva() {
    if (this.conexion === 'AC') {
      return await this.pgpRepository.manager.query(
        `
        SELECT 
              ISNULL(CONS.NContrato, '8001') NContrato,
              ISNULL(CONS.Contrato, 'PGP NUEVA EPS- CONTRIBUTIVO')Contrato,
              G.DayNumberOfMonth Dia,
              ISNULL(CONS.TotalEjecutado, 0) TotalEjecutado
              FROM 
              GCMDIMFECHA G LEFT JOIN(SELECT   
              GENDETCON.GDECODIGO As NContrato,
              GENDETCON.GDENOMBRE As Contrato,
              DAY(SLNORDSER.SOSFECORD) Dia,
              SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado
            FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
                INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
                INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
              WHERE GENDETCON.GDECODIGO = '8001'
                AND ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND MONTH(SLNORDSER.SOSFECORD) = MONTH(GETDATE()) AND YEAR(SLNORDSER.SOSFECORD) = YEAR(GETDATE())
              GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, DAY(SLNORDSER.SOSFECORD)
            )AS CONS ON CONS.Dia = G.DayNumberOfMonth
              WHERE MONTH(G.DATE) = MONTH(GETDATE()) AND YEAR(G.DATE) = YEAR(GETDATE());`
      );
    }
    if (this.conexion === 'VDP') {
      return await this.pgpRepository.manager.query(
        `
        SELECT 
              ISNULL(CONS.NContrato, 'I202') NContrato,
              ISNULL(CONS.Contrato, 'PGP NUEVA EPS S.A.S')Contrato,
              G.DayNumberOfMonth Dia,
              ISNULL(CONS.TotalEjecutado, 0) TotalEjecutado
              FROM 
              GCMDIMFECHA G LEFT JOIN(SELECT   
              GENDETCON.GDECODIGO As NContrato,
              GENDETCON.GDENOMBRE As Contrato,
              DAY(SLNORDSER.SOSFECORD) Dia,
              SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado
            FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
                INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
                INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
              WHERE GENDETCON.GDECODIGO = 'I202'
                AND ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND MONTH(SLNORDSER.SOSFECORD) = MONTH(GETDATE()) AND YEAR(SLNORDSER.SOSFECORD) = YEAR(GETDATE())
              GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, DAY(SLNORDSER.SOSFECORD)
            )AS CONS ON CONS.Dia = G.DayNumberOfMonth
              WHERE MONTH(G.DATE) = MONTH(GETDATE()) AND YEAR(G.DATE) = YEAR(GETDATE());`
      );
    }
  }

  /**
   *
   * @returns Total Cargado por el contrato de asmet
   */
  async TotalEjecutadoAcostadoDiario8006() {
    if (this.conexion === 'AC') {
      return await this.pgpRepository.manager.query(
        `
        SELECT 
              ISNULL(CONS.NContrato, 'ASMET') NContrato,
              ISNULL(CONS.Contrato, 'PGP ASMET SALUD SUBS - CONTR')Contrato,
              G.DayNumberOfMonth Dia,
              ISNULL(CONS.TotalEjecutado, 0) TotalEjecutado
              FROM 
              GCMDIMFECHA G LEFT JOIN(SELECT   
              'ASMET' As NContrato,
              'PGP ASMET SALUD SUBS - CONTR' As Contrato,
              DAY(SLNORDSER.SOSFECORD) Dia,
              SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado
            FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
                INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
                INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
              WHERE GENDETCON.GDECODIGO IN('8005', '8006')
                AND ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND MONTH(SLNORDSER.SOSFECORD) = MONTH(GETDATE()) AND YEAR(SLNORDSER.SOSFECORD) = YEAR(GETDATE())
              GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, DAY(SLNORDSER.SOSFECORD)
            )AS CONS ON CONS.Dia = G.DayNumberOfMonth
              WHERE MONTH(G.DATE) = MONTH(GETDATE()) AND YEAR(G.DATE) = YEAR(GETDATE());`
      );
    }
    if (this.conexion === 'AGU') {
      return await this.pgpRepository.manager.query(
        `
        SELECT 
              ISNULL(CONS.NContrato, '8003 - 8004') NContrato,
              ISNULL(CONS.Contrato, 'PGP ASMET SALUD SUBS - CONTR')Contrato,
              G.DayNumberOfMonth Dia,
              ISNULL(CONS.TotalEjecutado, 0) TotalEjecutado
              FROM 
              GCMDIMFECHA G LEFT JOIN(SELECT   
              'ASMET' As NContrato,
              'PGP ASMET SALUD SUBS - CONTR' As Contrato,
              DAY(SLNORDSER.SOSFECORD) Dia,
              SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado
            FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
                INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
                INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
              WHERE GENDETCON.GDECODIGO IN('8003', '8004')
                AND ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND MONTH(SLNORDSER.SOSFECORD) = MONTH(GETDATE()) AND YEAR(SLNORDSER.SOSFECORD) = YEAR(GETDATE())
              GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, DAY(SLNORDSER.SOSFECORD)
            )AS CONS ON CONS.Dia = G.DayNumberOfMonth
              WHERE MONTH(G.DATE) = MONTH(GETDATE()) AND YEAR(G.DATE) = YEAR(GETDATE());`
      );
    }
  }

  /**
   *
   * @returns Total Cargado por el contrato de asmet contingente
   */
  async TotalEjecutadoAcostadoDiario8010() {
    if (this.conexion === 'AC') {
      return await this.pgpRepository.manager.query(
        `
        SELECT 
              ISNULL(CONS.NContrato, '8010') NContrato,
              ISNULL(CONS.Contrato, 'CONTINGENTE PGP ASMET SALUD')Contrato,
              G.DayNumberOfMonth Dia,
              ISNULL(CONS.TotalEjecutado, 0) TotalEjecutado
              FROM 
              GCMDIMFECHA G LEFT JOIN(SELECT   
              GENDETCON.GDECODIGO As NContrato,
              GENDETCON.GDENOMBRE As Contrato,
              DAY(SLNORDSER.SOSFECORD) Dia,
              SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado
            FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
                INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
                INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
              WHERE GENDETCON.GDECODIGO = '8010'
                AND ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND MONTH(SLNORDSER.SOSFECORD) = MONTH(GETDATE()) AND YEAR(SLNORDSER.SOSFECORD) = YEAR(GETDATE())
              GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, DAY(SLNORDSER.SOSFECORD)
            )AS CONS ON CONS.Dia = G.DayNumberOfMonth
              WHERE MONTH(G.DATE) = MONTH(GETDATE()) AND YEAR(G.DATE) = YEAR(GETDATE());`
      );
    }
    if (this.conexion === 'AGU') {
      return await this.pgpRepository.manager.query(
        `
        SELECT 
              ISNULL(CONS.NContrato, '8005') NContrato,
              ISNULL(CONS.Contrato, 'PGP CONTINGENTE - ASMET SALUD EPS')Contrato,
              G.DayNumberOfMonth Dia,
              ISNULL(CONS.TotalEjecutado, 0) TotalEjecutado
              FROM 
              GCMDIMFECHA G LEFT JOIN(SELECT   
              GENDETCON.GDECODIGO As NContrato,
              GENDETCON.GDENOMBRE As Contrato,
              DAY(SLNORDSER.SOSFECORD) Dia,
              SUM(SLNSERPRO.SERCANTID * SLNSERPRO.SERVALPRO) TotalEjecutado
            FROM HPNESTANC
              INNER JOIN HPNDEFCAM ON HPNESTANC.HPNDEFCAM = HPNDEFCAM.OID
                INNER JOIN ADNINGRESO ON HPNESTANC.ADNINGRES = ADNINGRESO.OID
                INNER JOIN GENPACIEN ON ADNINGRESO.GENPACIEN = GENPACIEN.OID
                INNER JOIN GENDETCON ON ADNINGRESO.GENDETCON = GENDETCON.OID
                LEFT JOIN SLNSERPRO ON SLNSERPRO.ADNINGRES1 = ADNINGRESO.OID
                LEFT Join SLNORDSER On SLNORDSER.OID = SLNSERPRO.SLNORDSER1
                LEFT JOIN GCMLIMPGP G ON GENDETCON.GDECODIGO = G.GDECODIGO
              WHERE GENDETCON.GDECODIGO = '8005'
                AND ADNINGRESO.AINESTADO = 0 
                AND SLNORDSER.SOSESTADO <> 2
                AND HPNDEFCAM.HCAESTADO = 2
                AND HPNESTANC.HESFECSAL IS NULL
                AND MONTH(SLNORDSER.SOSFECORD) = MONTH(GETDATE()) AND YEAR(SLNORDSER.SOSFECORD) = YEAR(GETDATE())
              GROUP BY GENDETCON.GDECODIGO, GENDETCON.GDENOMBRE, DAY(SLNORDSER.SOSFECORD)
            )AS CONS ON CONS.Dia = G.DayNumberOfMonth
              WHERE MONTH(G.DATE) = MONTH(GETDATE()) AND YEAR(G.DATE) = YEAR(GETDATE());`
      );
    }
  }
}
