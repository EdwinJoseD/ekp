import { Inject, UnauthorizedException } from '@nestjs/common';
import { REQUEST } from '@nestjs/core';
import { AuthService } from 'src/auth/auth.service';
import { Connection, getManager } from 'typeorm';
import { Request } from 'express';

export class FacturacionUsuarioRepository {
  private repository: Connection;
  private conexion: string;

  constructor(
    @Inject(REQUEST) request: Request,
    private readonly authService: AuthService
  ) {
    try {
      const token = request.headers.authorization.split(' ')[1];
      this.conexion = authService.getConnectionWithToken(token);
      this.repository = getManager(this.conexion).connection;
    } catch (error) {
      throw new UnauthorizedException('NO ESTAS AUTHENTICADO');
    }
  }

  async getFacturacionResumen(
    fechaInicio: string,
    fechaFin: string,
    usuario: string
  ) {
    return await this.repository.manager.query(
      `SELECT 
      COUNT(*) DOCUMENTOS,
      COUNT(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SLNFACTUR ELSE NULL END) CANTIDADREFACTURADA,
      COUNT(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SLNFACTUR ELSE NULL END) FACTURASANULADAS,
      
      (SUM(CASE WHEN SFATIPDOC IN(0, 1)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END)) FACTURADOEVENTO,
      SUM(CASE WHEN SFATIPDOC = 17 AND SFADOCANU = 0 THEN SFATOTFAC ELSE NULL END) REGISTROPGP,
      SUM(CASE WHEN SFATIPDOC = 16 AND SFADOCANU = 0 THEN SFATOTFAC ELSE NULL END) FACTURACIONPGP,
      ISNULL(
      SUM(CASE WHEN SFATIPDOC = 17 AND SFADOCANU = 0 THEN SFATOTFAC ELSE NULL END)
      + SUM(CASE WHEN SFATIPDOC IN(0, 1)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END),
      SUM(CASE WHEN SFATIPDOC = 16 AND SFADOCANU = 0 THEN SFATOTFAC ELSE NULL END)
      ) PRODUCCION,
      SUM(CASE WHEN CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN NULL ELSE  SFAVALREC END) FACTRECUPERACION,
      SUM(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END) TOTALFACTURASANULADAS
      FROM GCVUSUFACTUR
      WHERE
      CONVERT(DATE, SFAFECFAC, 103) BETWEEN @0 AND @1
      AND SFACANANU < 1
      AND SFAGENUSU = @2`,
      [fechaInicio, fechaFin, usuario]
    );
  }

  async getFacturaciongrafica(
    fechaInicio: string,
    fechaFin: string,
    usuario: string
  ) {
    return await this.repository.manager.query(
      `SELECT 
      G.DayNumberOfMonth DIA,
      CONS.FACTURAS,
      CONS.PRODUCCION
      FROM GCMDIMFECHA G
      LEFT JOIN
      (SELECT DAY(SFAFECFAC) DIA,
      COUNT(*) FACTURAS,
      ISNULL((
      SUM(CASE WHEN SFATIPDOC = 17 AND SFADOCANU = 0 THEN SFATOTFAC ELSE NULL END)
      + SUM(CASE WHEN SFATIPDOC IN(0, 1, 17)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END)
      ), SUM(CASE WHEN SFATIPDOC IN(0, 1, 17)THEN SFATOTFAC ELSE NULL END)
      ) PRODUCCION
      FROM GCVUSUFACTUR
      WHERE
      CONVERT(DATE, SFAFECFAC, 103) BETWEEN @0 AND @1
      AND SFACANANU < 1
      AND SFAGENUSU = @2
      GROUP BY DAY(SFAFECFAC)
      )CONS ON CONS.DIA = G.DayNumberOfMonth
      WHERE
      CONVERT(DATE, G.Date, 103) BETWEEN @0 AND @1
      `,
      [fechaInicio, fechaFin, usuario]
    );
  }

  async getFacturacionCentros(
    fechaInicio: string,
    fechaFin: string,
    usuario: string
  ) {
    return await this.repository.manager.query(
      `SELECT 
      ISNULL(ACANOMBRE, 'FACTURA GLOBAL PGP') NOMBRE,
      COUNT(*) DOCUMENTOS,
      COUNT(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SLNFACTUR ELSE NULL END) FACTURASANULADAS,
      COUNT(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SLNFACTUR ELSE NULL END) CANTIDADREFACTURADA,
      
      SUM(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END) TOTALFACTURASANULADAS,
      SUM(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SRFTOTFAC ELSE NULL END) TOTALREFACTURADA,
      ISNULL(
      SUM(CASE WHEN SFATIPDOC IN(0, 1)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) 
      BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END),
      SUM(CASE WHEN SFATIPDOC IN(0, 1) THEN SFATOTFAC ELSE NULL END)
      ) FACTURADO,
      SUM(SFATOTFAC) PRODUCCION
      FROM GCVUSUFACTUR
      WHERE
      CONVERT(DATE, SFAFECFAC, 103) BETWEEN @0 AND @1
      AND SFACANANU < 1
      AND SFAGENUSU = @2
      GROUP BY ACANOMBRE
      `,
      [fechaInicio, fechaFin, usuario]
    );
  }

  async getFacturacionDocumentos(
    fechaInicio: string,
    fechaFin: string,
    usuario: string
  ) {
    return await this.repository.manager.query(
      `SELECT 
      Case When SFATIPDOC = 0 Then 'FACTURA PACIENTE'
          When SFATIPDOC = 1 Then 'FACTURA ENTIDAD'
        When SFATIPDOC = 16 Then 'FACTURA GLOBALPFGP'
          Else 'REGISTRO FACTURA GLOBAL PFGP' End As NOMBRE,
      COUNT(*) DOCUMENTOS,
      COUNT(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SLNFACTUR ELSE NULL END) FACTURASANULADAS,
      COUNT(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SLNFACTUR ELSE NULL END) CANTIDADREFACTURADA,
      
      SUM(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END) TOTALFACTURASANULADAS,
      SUM(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SRFTOTFAC ELSE NULL END) TOTALREFACTURADA,
      ISNULL(
      SUM(CASE WHEN SFATIPDOC IN(0, 1)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) 
      BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END),
      SUM(CASE WHEN SFATIPDOC IN(0, 1) THEN SFATOTFAC ELSE NULL END)
      ) FACTURADO,
      SUM(SFATOTFAC) PRODUCCION
      FROM GCVUSUFACTUR
      WHERE
      CONVERT(DATE, SFAFECFAC, 103) BETWEEN @0 AND @1
      AND SFACANANU < 1
      AND SFAGENUSU = @2
      GROUP BY SFATIPDOC`,
      [fechaInicio, fechaFin, usuario]
    );
  }

  async getFacturacionServicioEgreso(
    fechaInicio: string,
    fechaFin: string,
    usuario: string
  ) {
    return await this.repository.manager.query(
      `SELECT 
      ISNULL(AESNOMBRE, 'INGRESO POR CONSULTA EXTERNA') NOMBRE,
      COUNT(*) DOCUMENTOS,
      COUNT(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SLNFACTUR ELSE NULL END) FACTURASANULADAS,
      COUNT(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SLNFACTUR ELSE NULL END) CANTIDADREFACTURADA,
      
      SUM(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END) TOTALFACTURASANULADAS,
      SUM(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SRFTOTFAC ELSE NULL END) TOTALREFACTURADA,
      ISNULL(
      SUM(CASE WHEN SFATIPDOC IN(0, 1)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) 
      BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END),
      SUM(CASE WHEN SFATIPDOC IN(0, 1) THEN SFATOTFAC ELSE NULL END)
      ) FACTURADO,
      SUM(SFATOTFAC) PRODUCCION
      FROM GCVUSUFACTUR
      WHERE
      CONVERT(DATE, SFAFECFAC, 103) BETWEEN @0 AND @1
      AND SFACANANU < 1
      AND SFAGENUSU = @2
      GROUP BY AESNOMBRE`,
      [fechaInicio, fechaFin, usuario]
    );
  }

  async getFacturacionEntidades(
    fechaInicio: string,
    fechaFin: string,
    usuario: string
  ) {
    return await this.repository.manager.query(
      `SELECT 
      GENTERCER,
      GTRNOMBRE NOMBRE,
      COUNT(*) DOCUMENTOS,
      COUNT(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SLNFACTUR ELSE NULL END) FACTURASANULADAS,
      COUNT(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SLNFACTUR ELSE NULL END) CANTIDADREFACTURADA,
      
      SUM(CASE WHEN SFADOCANU = 1 AND CONVERT(DATE, SFAFECANU, 103) BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END) TOTALFACTURASANULADAS,
      SUM(CASE WHEN CONVERT(DATE, SRFFECFAC, 103) < @0 THEN SRFTOTFAC ELSE NULL END) TOTALREFACTURADA,
      ISNULL(
      SUM(CASE WHEN SFATIPDOC IN(0, 1)THEN SFATOTFAC ELSE NULL END) 
      - SUM(CASE WHEN SFATIPDOC IN(0, 1) AND CONVERT(DATE, SFAFECANU, 103) 
      BETWEEN @0 AND @1 THEN SFATOTFAC ELSE NULL END),
      SUM(CASE WHEN SFATIPDOC IN(0, 1) THEN SFATOTFAC ELSE NULL END)
      ) FACTURADO,
      SUM(SFATOTFAC) PRODUCCION
      FROM GCVUSUFACTUR
      WHERE
      CONVERT(DATE, SFAFECFAC, 103) BETWEEN @0 AND @1
      AND SFACANANU < 1
      AND SFAGENUSU = @2
      GROUP BY GENTERCER, GTRNOMBRE`,
      [fechaInicio, fechaFin, usuario]
    );
  }
}
